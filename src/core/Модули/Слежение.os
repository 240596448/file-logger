#Использовать logos
#Использовать fs

Перем Лог;
Перем Параметры;
Перем ТаблицаКонтроля;

Процедура УстановитьПараметры(пПараметры) Экспорт

	Параметры.Вставить("Путь", пПараметры.Путь);
	Параметры.Вставить("Фильтр", пПараметры.Фильтр);
	Параметры.Вставить("Рекурсивно", пПараметры.Рекурсивно);
	Параметры.Вставить("Период", пПараметры.Период);
	Параметры.Вставить("Длительность", пПараметры.Длительность);
	
КонецПроцедуры

Процедура ЗапуститьКонтроль() Экспорт

	Если НЕ ФС.Существует(Параметры.Путь) Тогда
		Лог.КритичнаяОшибка("Отслеживаемый объект НЕ НАЙДЕН: %1", ФС.ПолныйПуть(Параметры.Путь));
		Возврат;
	КонецЕсли;

	Лог.Информация("Отслеживаемый объект: %1%2", 
				ОбъединитьПути(ФС.ПолныйПуть(Параметры.Путь), Параметры.Фильтр),
				?(Параметры.Рекурсивно, " (рекурсивно)", ""));
	Лог.Информация("Интервал: каждые %1%2 сек.", Параметры.Период, 
				?(ЗначениеЗаполнено(Параметры.Длительность), " на протяжении " + Параметры.Длительность, ""));

	НачалоКонтроля = ТекущаяДата();
	Лог.Информация("Начало слежения: %1", НачалоКонтроля);

	Если ЗначениеЗаполнено(Параметры.Длительность) Тогда 
		
		ОкончаниеКонтроля = НачалоКонтроля + Параметры.Длительность;
		Лог.Информация("Ожидаемое окончание слежения: %1", ОкончаниеКонтроля);
		УсловиеЦиклаКонтроля = "ТекущаяДата() < ОкончаниеКонтроля";
	
	Иначе

		Лог.Предупреждение("Окончание слежения: <не задано>");
		УсловиеЦиклаКонтроля = "Истина";

	КонецЕсли;
	
	Пока Вычислить(УсловиеЦиклаКонтроля) Цикл
		ВыполнитьКонтроль();
		Приостановить(Параметры.Период * 1000);
	КонецЦикла;

	Лог.Информация("Окончание слежения: %1", ТекущаяДата());

КонецПроцедуры

Процедура ВыполнитьКонтроль()

	Для каждого Стр Из ТаблицаКонтроля Цикл
		Стр.Статус = Перечисления.Статусы.Удален;
		Стр.ДатаКонтроля = ТекущаяДата();
	КонецЦикла;

	мФайлы = НайтиФайлы(Параметры.Путь, Параметры.Фильтр, Параметры.Рекурсивно);
	Для каждого Файл Из мФайлы Цикл
		ПолноеИмя = Файл.ПолноеИмя;
		
		Стр = ТаблицаКонтроля.Найти(ПолноеИмя, "ПолноеИмя");
		СвойстваФайла = СвойстваФайла(Файл);
		Если Стр = Неопределено Тогда
			Стр = ТаблицаКонтроля.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СвойстваФайла);
			Стр.Статус = Перечисления.Статусы.Новый;
			Стр.ДатаКонтроля = СвойстваФайла.ДатаИзменения;
		ИначеЕсли Стр.Размер <> СвойстваФайла.Размер
			Или Стр.ДатаИзменения <> СвойстваФайла.ДатаИзменения Тогда
			ЗаполнитьЗначенияСвойств(Стр, СвойстваФайла);
			Стр.Статус = Перечисления.Статусы.Изменен;
			Стр.ДатаКонтроля = СвойстваФайла.ДатаИзменения;
		Иначе
			Стр.Статус = Перечисления.Статусы.НеИзменился;
			Стр.ДатаКонтроля = СвойстваФайла.ДатаИзменения;
		КонецЕсли;

	КонецЦикла;

	мСнятьСКонтроля = Новый Массив;
	мФайлыКОбработке = Новый Массив;
	Для каждого Стр Из ТаблицаКонтроля Цикл
		Если Стр.Статус = Перечисления.Статусы.Удален Тогда
			мСнятьСКонтроля.Добавить(Стр);
		КонецЕсли;
		Если НЕ Стр.Статус = Перечисления.Статусы.НеИзменился Тогда
			мФайлыКОбработке.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;

	Если ЗначениеЗаполнено(мФайлыКОбработке) Тогда
		МенеджерОбработчиков.ВыполнитьОбработчики(мФайлыКОбработке);
	КонецЕсли;

	Для каждого Стр Из мСнятьСКонтроля Цикл
		ТаблицаКонтроля.Удалить(Стр);
	КонецЦикла;

КонецПроцедуры

Функция СвойстваФайла(Файл)
	сткСвойства = Новый Структура();
	сткСвойства.Вставить("ПолноеИмя", Файл.ПолноеИмя);
	сткСвойства.Вставить("Имя", Файл.Имя);
	сткСвойства.Вставить("ОтносительныйПуть", ФС.ОтносительныйПуть(Параметры.Путь, Файл.Путь));
	Если НЕ Файл.ЭтоКаталог() Тогда
		сткСвойства.Вставить("Размер", Файл.Размер());
		сткСвойства.Вставить("ЭтоКаталог", Ложь);
	Иначе
		сткСвойства.Вставить("Размер", 0);
		сткСвойства.Вставить("ЭтоКаталог", Истина);
	КонецЕсли;
	сткСвойства.Вставить("ДатаИзменения", Файл.ПолучитьВремяИзменения());
	Возврат сткСвойства;
КонецФункции

Процедура Инициализировать()

	Лог = Логирование.ПолучитьЛог(ПараметрыПриложения.ИмяЛога());
	ВыводПоУмолчанию = Новый ВыводЛогаВКонсоль();
	Лог.ДобавитьСпособВывода(ВыводПоУмолчанию);

	ТаблицаКонтроля = Новый ТаблицаЗначений();
	
	ТаблицаКонтроля.Колонки.Добавить("ПолноеИмя");
	ТаблицаКонтроля.Колонки.Добавить("Имя");
	ТаблицаКонтроля.Колонки.Добавить("ОтносительныйПуть");
	ТаблицаКонтроля.Колонки.Добавить("ЭтоКаталог");
	ТаблицаКонтроля.Колонки.Добавить("Размер");
	ТаблицаКонтроля.Колонки.Добавить("ДатаИзменения");
	ТаблицаКонтроля.Колонки.Добавить("Статус");
	ТаблицаКонтроля.Колонки.Добавить("ДатаКонтроля");

	Параметры = Новый Структура();

КонецПроцедуры

Инициализировать();
